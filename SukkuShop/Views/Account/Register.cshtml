@model SukkuShop.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "form-horizontal registerForm", role = "form"}))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new {@class = "col-md-2 control-label"})
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.Email, new {@class = "form-control", name = "email"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new {@class = "col-md-2 control-label"})
        <div class="col-md-3">
            @Html.PasswordFor(m => m.Password, new {@class = "form-control", name = "password"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new {@class = "col-md-2 control-label"})
        <div class="col-md-3">
            @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", name = "password"})
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.registerForm').bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    Email: {
                        validators: {
                            notEmpty: {
                                message: 'The email is required and cannot be empty'
                            },
                            emailAddress: {
                                message: 'The input is not a valid email address'
                            }
                        }
                    },
                    Password: {
                        validators: {
                            notEmpty: {
                                message: 'To pole jest wymagane'
                            },
                            stringLength: {
                                min: 6,
                                message: 'Hasło musi zawierać przynajmniej 6 znaków'
                            },
                            identical: {
                                field: "ConfirmPassword",
                                message: "Pola Hasło i Potwierdź hasło muszą być identyczne"
                            }
                        }
                    },
                    ConfirmPassword: {
                        validators: {
                            identical: {
                                field: "Password",
                                message: "Pola Hasło i Potwierdź hasło muszą być identyczne"
                            },
                            notEmpty: {
                                message: 'To pole jest wymagane'
                            },
                        }
                    }
                }
            });
        });
    </script>
}