@using SukkuShop.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm1">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal loginForm", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                <div class="form-group">
                    <label class="col-md-2 control-label">Email address</label>
                    <div class="col-md-4">
                        <input type="text" class="form-control" name="email" />
                    </div>
                    </div>
                <div class="form-group">
                    <label class="col-md-2 control-label">Password</label>
                    <div class="col-md-4">
                        <input type="password" class="form-control" name="password" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-sm-6">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-sm-6">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
               
            }
        </section>
        <p>
            @Html.ActionLink("Register as a new user", "Register")
        </p>
        <p>
            @Html.ActionLink("Forgot your password?", "ForgotPassword")
        </p>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.loginForm').bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    email: {
                        validators: {
                            notEmpty: {
                                message: 'The email is required and cannot be empty'
                            },
                            emailAddress: {
                                message: 'The input is not a valid email address'
                            }
                        }
                    },
                    password: {
                validators: {
                        notEmpty: {
                            message: 'The password is required and cannot be empty'
                        },
                    different: {
                        field: 'username',
                        message: 'The password cannot be the same as username'
                    },
                    stringLength: {
                        min: 6,
                        message: 'The password must have at least 6 characters'
                    }
                }
            },
                }
            });
        });
    </script>
    
}