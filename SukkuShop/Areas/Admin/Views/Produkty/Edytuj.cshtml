@model SukkuShop.Areas.Admin.Models.ProductEditModel
@{
    ViewBag.Title = "Edit";
}
<div class="main-box">
    @Html.Action(MVC.Admin.Produkty.GetCategoriesCreateEditProduct())
    <div class="create-prod-box">
        <div id="image-container">
            @if (Model.Image != null)
            {                
                <div id="trueimg-box">
                    <img id="trueimg" src=~/@("Content/Images/Shop/"+Model.Image+".jpg") />                    
                    <div id="tekst-noimg"></div>
                </div>
            }
            else
            {
                <div id="trueimg-box">
                    <div class="bubble"><p>Wstaw zdjęcie <br /><span style="font-size: 30px;text-transform: none;">MIN. 500x500</span><br /></p></div>
                </div>
            }
        </div>
        @using (Html.BeginForm(MVC.Admin.Produkty.Edytuj(), FormMethod.Post, new { id = "CreateProductForm", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(m => m.TrueImageDeleted)
            @Html.HiddenFor(m => m.Id)
            @Html.AntiForgeryToken()
            <div class="left-container-edit">
                <div class="bad-image">ZŁE ZDJĘCIE</div>
                <div class="default-img">Przywróć domyślne</div>
                @if (Model.Image != null)
                {
                    <div id='hide-img' class="danger-text" style='z-index:100;top:0;left:0'>USUŃ ZDJĘCIE</div>
                }
                
                @Html.ValidationSummary()
                <div class="textbox-container" id="title">
                    @Html.TextBoxFor(m => m.Title, new { placeholder = "NAZWA PRODUKTU" })
                    <div class="icon-pencil"></div>
                </div>
                <div class="styled-select" style="margin-bottom: 10px;">
                    @Html.DropDownListFor(m => m.Category, (List<SelectListItem>)ViewBag.CategoryList, new { id = "MainCategoryList", onchange = "mainselectchange()" })
                </div>
                <div class="styled-select plz" id="sublist">
                    @Html.DropDownListFor(m => m.SubCategory, (List<SelectListItem>)ViewBag.SubCategoryList, new { id = "SubCategoryList" })
                </div>
                <div class="textbox-container" id="price">
                    <span class="text-edit">CENA</span> @Html.TextBoxFor(m => m.Price, new { placeholder = "0,00", id = "price-textbox" }) <span class="text-edit">
                        PLN
                    </span>
                    <div class="icon-pencil text-edit"></div>
                </div>
                <div class="textbox-container" id="quantity">
                    <span class="text-edit">
                        ILOŚĆ
                    </span> @Html.TextBoxFor(m => m.Quantity, new { placeholder = 0, id = "quantity-textbox" }) <span class="text-edit">
                        szt.
                    </span>
                    <div class="icon-pencil text-edit"></div>
                </div>

                <div class="textbox-container" id="packing">
                    @Html.TextBoxFor(m => m.Packing, new { placeholder = "PAKOWANIE", id = "packing-textbox" })
                    <div class="icon-pencil text-edit"></div>

                </div>
                @Html.TextBoxFor(m => m.ImageBig, new { type = "file", onchange = "onFileSelected(event)", style = "visibility: hidden" })

            </div>
            <div class="bottom-container">
                @Html.TextAreaFor(m => m.Description, new { placeholder = "opis produktu..." })
                <div class="clear"></div>
                <div class="prom-text">PRZYDZIEL PROMOCJĘ NA PRODUKT</div>
                <div class="icon-pencil fapencil"></div>
                <div class="prom-text" style="float:right;margin-right: 20px">%</div>
                @Html.TextBoxFor(m => m.Promotion, new { placeholder = 0, id = "prom-textbox" })
                <div>
                    <div style="float:right;">
                        @Html.CheckBoxFor(m => m.PublishAfterCreate, new { @class = "css-checkbox" })
                        @Html.LabelFor(m => m.PublishAfterCreate, "dodaj na sklep", new { @class = "css-label", style = "margin-top:40px;" })

                        <br />
                        <div class="clear" style="clear:both"></div>
                        <div id="start-upload">
                            <div id="triangle-right"></div><div class="zapisz-text">WYJDŹ I ZAPISZ</div>
                        </div>
                        <div class="clear" style="clear:both"></div>
                        <a href="@Url.Action(MVC.Admin.Produkty.Lista(Model.Title))">
                            <div id="triangle-right"></div><div class="zapisz-text">WYJDŹ BEZ ZAPISU</div>
                        </a>
                    </div>
                    <div class="clear" style="clear:both"></div>
                </div>
                <div class="error-plz">Cena, Kategoria oraz sposób pakowania muszą być podane przed publikacją!</div>
            </div>
        }
    </div>
    <div class="clear" style="clear:both;float:none;height:0"></div>
</div>

@Styles.Render("~/Areas/Admin/Content/css/CreateProduct.css")
@Scripts.Render("~/Scripts/jquery.validate.js")
@Scripts.Render("~/Areas/Admin/Scripts/AdminEditProduct.js")




